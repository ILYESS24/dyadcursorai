# Script de test pour v√©rifier l'installation de Bolt AI Builder
Write-Host "üß™ Test de l'installation Bolt AI Builder..." -ForegroundColor Cyan

# V√©rifier Node.js
Write-Host "`nüì¶ V√©rification de Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js non trouv√©. Veuillez installer Node.js 18.18.0 ou sup√©rieur." -ForegroundColor Red
    exit 1
}

# V√©rifier pnpm
Write-Host "`nüì¶ V√©rification de pnpm..." -ForegroundColor Yellow
try {
    $pnpmVersion = pnpm --version
    Write-Host "‚úÖ pnpm: $pnpmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå pnpm non trouv√©. Installation..." -ForegroundColor Yellow
    npm install -g pnpm
}

# V√©rifier les d√©pendances
Write-Host "`nüì¶ Installation des d√©pendances..." -ForegroundColor Yellow
pnpm install
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ D√©pendances install√©es" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
    exit 1
}

# V√©rifier le fichier .env
Write-Host "`nüîß V√©rification de la configuration..." -ForegroundColor Yellow
if (Test-Path .env) {
    Write-Host "‚úÖ Fichier .env trouv√©" -ForegroundColor Green
    
    # V√©rifier les variables importantes
    $envContent = Get-Content .env
    $hasAnthropic = $envContent | Where-Object { $_ -match "ANTHROPIC_API_KEY" -and $_ -notmatch "^#" }
    $hasGitHub = $envContent | Where-Object { $_ -match "GITHUB_TOKEN" -and $_ -notmatch "^#" }
    $hasVercel = $envContent | Where-Object { $_ -match "VERCEL_TOKEN" -and $_ -notmatch "^#" }
    
    if ($hasAnthropic) {
        Write-Host "‚úÖ ANTHROPIC_API_KEY configur√©" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  ANTHROPIC_API_KEY non configur√©" -ForegroundColor Yellow
    }
    
    if ($hasGitHub) {
        Write-Host "‚úÖ GITHUB_TOKEN configur√©" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  GITHUB_TOKEN non configur√© (optionnel)" -ForegroundColor Yellow
    }
    
    if ($hasVercel) {
        Write-Host "‚úÖ VERCEL_TOKEN configur√©" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  VERCEL_TOKEN non configur√© (optionnel)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Fichier .env non trouv√©. Ex√©cutez d'abord ./scripts/setup.ps1" -ForegroundColor Red
    exit 1
}

# Test de compilation
Write-Host "`nüî® Test de compilation..." -ForegroundColor Yellow
pnpm build
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Compilation r√©ussie" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur de compilation" -ForegroundColor Red
    exit 1
}

# Test de linting
Write-Host "`nüîç Test de linting..." -ForegroundColor Yellow
pnpm lint
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Linting r√©ussi" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Avertissements de linting d√©tect√©s" -ForegroundColor Yellow
}

Write-Host "`nüéâ Tests termin√©s avec succ√®s !" -ForegroundColor Green
Write-Host "`nüìã Prochaines √©tapes :" -ForegroundColor Cyan
Write-Host "1. Configurez vos cl√©s API dans le fichier .env" -ForegroundColor White
Write-Host "2. Lancez le serveur de d√©veloppement : pnpm dev" -ForegroundColor White
Write-Host "3. Ouvrez http://localhost:5173 dans votre navigateur" -ForegroundColor White
Write-Host "4. Commencez √† cr√©er des projets avec l'IA !" -ForegroundColor White

Write-Host "`nüöÄ Bolt AI Builder est pr√™t !" -ForegroundColor Magenta
